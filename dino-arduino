#define DINO1_PIN A0
#define DINO2_PIN A1
#define DINO3_PIN A2
#define DINO4_PIN A3

int scores[4] = {0, 0, 0, 0};
bool lastStates[4] = {HIGH, HIGH, HIGH, HIGH};
bool winnerDeclared = false;
unsigned long winnerTime = 0;

void setup() {
  Serial.begin(9600);
  pinMode(DINO1_PIN, INPUT);
  pinMode(DINO2_PIN, INPUT);
  pinMode(DINO3_PIN, INPUT);
  pinMode(DINO4_PIN, INPUT);
  delay(3000);  // Boot delay
}

void loop() {
  if (winnerDeclared && (millis() - winnerTime >= 15000)) {
    resetGame();
  }

  if (!winnerDeclared) {
    checkSensor(DINO1_PIN, 0);
    checkSensor(DINO2_PIN, 1);
    checkSensor(DINO3_PIN, 2);
    checkSensor(DINO4_PIN, 3);

    sendScores();

    for (int i = 0; i < 4; i++) {
      if (scores[i] >= 100) {
        winnerDeclared = true;
        winnerTime = millis();
        sendWinner(i);
        break;
      }
    }
  }

  delay(50);  // Sensor check frequency
}

void checkSensor(int pin, int index) {
  bool currentState = digitalRead(pin);
  if (lastStates[index] == HIGH && currentState == LOW) {
    scores[index]++;
  }
  lastStates[index] = currentState;
}

void sendScores() {
  Serial.print("DINO1 SCORE-");
  Serial.print(scores[0]);
  Serial.print(" ,  DINO2 SCORE-");
  Serial.print(scores[1]);
  Serial.print(" , DINO3 SCORE-");
  Serial.print(scores[2]);
  Serial.print(" , DINO4 SCORE-");
  Serial.println(scores[3]);
}

void sendWinner(int index) {
  Serial.print("WINNER - DINO");
  Serial.println(index + 1);
}

void resetGame() {
  for (int i = 0; i < 4; i++) {
    scores[i] = 0;
    lastStates[i] = HIGH;
  }
  winnerDeclared = false;
  Serial.println("RESET");
}
